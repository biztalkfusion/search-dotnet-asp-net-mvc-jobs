@using NYCJobsWeb.Models;
@model Login
@{
    ViewBag.Title = "Login";
    Layout = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>EDI Insights</title>
        @System.Web.Optimization.Styles.Render("~/Content/css")
        @System.Web.Optimization.Scripts.Render("~/bundles/modernizr")
        @System.Web.Optimization.Scripts.Render("~/bundles/jquery")
        @System.Web.Optimization.Scripts.Render("~/bundles/bootstrap")
    <link rel="stylesheet" href="~/Content/Site.css">
    <link rel="stylesheet" href="~/Content/bootstrap.css">
</head>
<body id="bodyOverlay" style="overflow-x: hidden;padding-top: 150px;">
    <div id="wrapper">
        <!-- .page-content-wrapper -->
        <div class="page-content-wrapper">
            <div class="page-content-inner">
                <!-- .page-content-inner -->
                <div id="page-header" class="clearfix">
                    <div class="row mtlgn">
                        <div class="col-xs-1 col-sm-3 col-md-4 col-lg-4"></div>
                        <div id="dvLogin" class="col-xs-10 col-sm-6 col-md-4 col-lg-4" style="background-color: #FFF; border: solid 1px #ccc;border-radius: 10px;padding: 15px;-moz-box-shadow: 0 0 5px 5px #888;-webkit-box-shadow: 0 0 5px 5px#888;box-shadow: 0 0 10px 5px #aaa;">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center logoBackground">
                                    EDI Insights
                                    @*<img src="/images/EDI Insights1.jpg" alt="">*@
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                                    @using (Ajax.BeginForm("Login", "Account", null, null, new { id = "frmLogin", @class = "form-horizontal" }))
                                    {
                                        <div class="content" style="padding: 10px; ">

                                            @if (Model.IsLoginFailed)
                                            {
                                                if (string.IsNullOrWhiteSpace(Model.ErrorMessage))
                                                {
                                                    <p id="msgInvalid" style="color: #FF0000; text-align: center;">Invalid Credentials</p>
                                                }
                                                else
                                                {
                                                    <p id="msgError" style="color: #FF0000; text-align: center;">@Model.ErrorMessage</p>
                                                }
                                            }
                                            <p style="color:green; text-align:center;" id="msgGreen"></p>
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <label class="control-label visible-ie8 visible-ie9">Username</label>
                                                    <div class="input-group" style="margin: 0 0 10px">
                                                        <span class="input-group-addon"><i style="width:14px;" class="fa fa-user"></i></span>
                                                        @Html.TextBoxFor(u => u.UserName, new { @class = "form-control", placeholder = "User Name", id = "txtUserName", name = "txtUserName", @type = "username" })
                                                    </div>
                                                    <label class="control-label visible-ie8 visible-ie9">Password</label>
                                                    <div style="padding-top: 5px;" class="input-group">
                                                        <span class="input-group-addon"><i class="fa fa-key"></i></span>
                                                        @Html.PasswordFor(u => u.Password, new { @class = "form-control", placeholder = "Password", id = "txtPassword", name = "txtPassword", required = "", @type = "password", oninvalid = "setCustomValidity('Invalid Password')", oninput = "setCustomValidity('')" })
                                                    </div>
                                                    <p id="msgPassword" style="color: #FF0000;">
                                                        @Html.ValidationMessageFor(m => m.Password)
                                                    </p>
                                                </div>
                                            </div>

                                            <div style="float:right;" class="divContinue">
                                                <button class="btn btn-secondary uppercase prev-step btnContinue" type="submit" id="btnLogin">Login</button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-1 col-sm-3 col-md-4 col-lg-4"></div>
                    </div>
                </div>
            </div>
            <!-- / .page-content-inner -->
        </div>
        <!-- / page-content-wrapper -->
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
             @{   <text>
            $("#txtUserName").val('');
            $("#txtPassword").val('');
            $("#txtUserName").focus();
            </text>
                     }
            $('#frmLogin').on('submit', function (e) {
                         return CheckValidLogin(e);
                     });

            var errorMsg = '@Model.ErrorMessage';
            if (errorMsg !== "" || errorMsg.length > 0) {
                $("#txtPassword").val('');
                $("#txtPassword").focus();
                 }
        });

        //Method to validate username and password
        function CheckValidLogin(e) {
            $("#msgGreen,#msgInvalid,#msgError").empty().hide();
            var $password = $("#txtPassword");
            var userName = $("#txtUserName").val().trim();
            var validationMsg = "";
            var isValid = true;

            if ($password.length <= 0 || $password.val() === '' && !userName) {
                isValid = false;
                validationMsg = "Please enter your user name and password.";
            }
            else if (!userName) {
                isValid = false;
                validationMsg = "Please enter your user name.";
            }
            else if ($password.length <= 0 || $password.val() === '') {
                isValid = false;
                validationMsg = "Please enter your password.";
            }
            if (!isValid) {
                $("#msgGreen").show().text(validationMsg);
                $("#msgGreen").css("color", "#FF0000");
            }            

            if (!isValid) {
                e.cancelBubble = true;
                e.returnValue = false;
                if (e.preventDefault) {
                    e.preventDefault();
                }
                return false;
            }
            return true;
        }
    </script>
</body>
</html>

